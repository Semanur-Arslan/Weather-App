{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Semanur\\\\Desktop\\\\weather-app\\\\src\\\\WeatherApp.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useWeather } from \"./WeatherContext\";\nimport { fetchWeatherData } from './WeaterAPI';\nimport Select from 'react-select';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WeatherApp = () => {\n  _s();\n  // useWeather hook'u ile WeatherContext'ten state ve dispatch'i alıyoruz.\n  const {\n    state,\n    dispatch\n  } = useWeather();\n\n  // useEffect , bileşen yüklendiği anda ve state.selectedCity değiştiğinde çalışacak.\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // WeaterAPI.jsx dosyasında API'den çektiğimiz verileri alıyoruz\n        // state.selectedCity -> WeatherContext'ten gelen şehir bilgisini içerir.\n        const data = await fetchWeatherData(\"state.selectedCity\");\n\n        // fetchWeatherData(API)'dan gelen veriyi kullanarak WeatherContext'teki state'i güncelliyoruz.\n        // Güncellemeyi SET_WEATHER_DATA action'ı ile yapıyoruz.\n        dispatch({\n          type: 'SET_WEATHER_DATA',\n          payload: data\n        });\n      } catch (error) {\n        // Hata durumunu kontrol ediyoruz.\n        console.error('Hava durumu verileri alınırken hata oluştu:', error);\n      }\n    };\n    fetchData();\n  }, [state.selectedCity, dispatch]);\n\n  // Select bileşeni için seçenekler\n  const cityOptions = [{\n    value: 'Istanbul',\n    label: 'Istanbul'\n  }, {\n    value: 'Adana',\n    label: 'Adana'\n  }\n  // <option value=\"1\">Adana</option>\n  // <option value=\"2\">Adıyaman</option>\n  // <option value=\"3\">Afyonkarahisar</option>\n  // <option value=\"4\">Ağrı</option>\n  // <option value=\"5\">Amasya</option>\n  // <option value=\"6\">Ankara</option>\n  // <option value=\"7\">Antalya</option>\n  // <option value=\"8\">Artvin</option>\n  // <option value=\"9\">Aydın</option>\n  // <option value=\"10\">Balıkesir</option>\n  // <option value=\"11\">Bilecik</option>\n  // <option value=\"12\">Bingöl</option>\n  // <option value=\"13\">Bitlis</option>\n  // <option value=\"14\">Bolu</option>\n  // <option value=\"15\">Burdur</option>\n  // <option value=\"16\">Bursa</option>\n  // <option value=\"17\">Çanakkale</option>\n  // <option value=\"18\">Çankırı</option>\n  // <option value=\"19\">Çorum</option>\n  // <option value=\"20\">Denizli</option>\n  // <option value=\"21\">Diyarbakır</option>\n  // <option value=\"22\">Edirne</option>\n  // <option value=\"23\">Elazığ</option>\n  // <option value=\"24\">Erzincan</option>\n  // <option value=\"25\">Erzurum</option>\n  // <option value=\"26\">Eskişehir</option>\n  // <option value=\"27\">Gaziantep</option>\n  // <option value=\"28\">Giresun</option>\n  // <option value=\"29\">Gümüşhane</option>\n  // <option value=\"30\">Hakkâri</option>\n  // <option value=\"31\">Hatay</option>\n  // <option value=\"32\">Isparta</option>\n  // <option value=\"33\">Mersin</option>\n  // <option value=\"34\">İstanbul</option>\n  // <option value=\"35\">İzmir</option>\n  // <option value=\"36\">Kars</option>\n  // <option value=\"37\">Kastamonu</option>\n  // <option value=\"38\">Kayseri</option>\n  // <option value=\"39\">Kırklareli</option>\n  // <option value=\"40\">Kırşehir</option>\n  // <option value=\"41\">Kocaeli</option>\n  // <option value=\"42\">Konya</option>\n  // <option value=\"43\">Kütahya</option>\n  // <option value=\"44\">Malatya</option>\n  // <option value=\"45\">Manisa</option>\n  // <option value=\"46\">Kahramanmaraş</option>\n  // <option value=\"47\">Mardin</option>\n  // <option value=\"48\">Muğla</option>\n  // <option value=\"49\">Muş</option>\n  // <option value=\"50\">Nevşehir</option>\n  // <option value=\"51\">Niğde</option>\n  // <option value=\"52\">Ordu</option>\n  // <option value=\"53\">Rize</option>\n  // <option value=\"54\">Sakarya</option>\n  // <option value=\"55\">Samsun</option>\n  // <option value=\"56\">Siirt</option>\n  // <option value=\"57\">Sinop</option>\n  // <option value=\"58\">Sivas</option>\n  // <option value=\"59\">Tekirdağ</option>\n  // <option value=\"60\">Tokat</option>\n  // <option value=\"61\">Trabzon</option>\n  // <option value=\"62\">Tunceli</option>\n  // <option value=\"63\">Şanlıurfa</option>\n  // <option value=\"64\">Uşak</option>\n  // <option value=\"65\">Van</option>\n  // <option value=\"66\">Yozgat</option>\n  // <option value=\"67\">Zonguldak</option>\n  // <option value=\"68\">Aksaray</option>\n  // <option value=\"69\">Bayburt</option>\n  // <option value=\"70\">Karaman</option>\n  // <option value=\"71\">Kırıkkale</option>\n  // <option value=\"72\">Batman</option>\n  // <option value=\"73\">Şırnak</option>\n  // <option value=\"74\">Bartın</option>\n  // <option value=\"75\">Ardahan</option>\n  // <option value=\"76\">Iğdır</option>\n  // <option value=\"77\">Yalova</option>\n  // <option value=\"78\">Karabük</option>\n  // <option value=\"79\">Kilis</option>\n  // <option value=\"80\">Osmaniye</option>\n  // <option value=\"81\">Düzce</option>,\n  // Diğer şehirleri buraya ekleyebilirsiniz\n  ];\n\n  // Select bileşeni için onChange olayı\n  const handleCityChange = selectedOption => {\n    // Seçilen şehri WeatherContext'e iletiyoruz.\n    dispatch({\n      type: 'SET_SELECTED_CITY',\n      payload: selectedOption.value\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"citySelect\",\n      children: \"\\u015Eehir Se\\xE7:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      id: \"citySelect\",\n      value: {\n        value: state.selectedCity,\n        label: state.selectedCity\n      },\n      options: cityOptions,\n      onChange: handleCityChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: state.weatherData && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [state.weatherData.city.name, \" - \", state.weatherData.city.country]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n};\n_s(WeatherApp, \"O9XuUC1gUbmxCt2DsHxBZsUlZIw=\", false, function () {\n  return [useWeather];\n});\n_c = WeatherApp;\nexport default WeatherApp;\nvar _c;\n$RefreshReg$(_c, \"WeatherApp\");","map":{"version":3,"names":["React","useEffect","useWeather","fetchWeatherData","Select","jsxDEV","_jsxDEV","WeatherApp","_s","state","dispatch","fetchData","data","type","payload","error","console","selectedCity","cityOptions","value","label","handleCityChange","selectedOption","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","options","onChange","weatherData","city","name","country","_c","$RefreshReg$"],"sources":["C:/Users/Semanur/Desktop/weather-app/src/WeatherApp.jsx"],"sourcesContent":["\r\n\r\nimport React, { useEffect } from 'react';\r\nimport {useWeather} from \"./WeatherContext\" ;\r\nimport { fetchWeatherData } from './WeaterAPI'; \r\nimport Select from 'react-select';\r\n\r\nconst WeatherApp = () => {\r\n    // useWeather hook'u ile WeatherContext'ten state ve dispatch'i alıyoruz.\r\n    const {state, dispatch} = useWeather();\r\n\r\n    // useEffect , bileşen yüklendiği anda ve state.selectedCity değiştiğinde çalışacak.\r\n    useEffect(() => {\r\n       \r\n        const fetchData = async () => {\r\n          try {\r\n           \r\n            // WeaterAPI.jsx dosyasında API'den çektiğimiz verileri alıyoruz\r\n            // state.selectedCity -> WeatherContext'ten gelen şehir bilgisini içerir.\r\n            const data = await fetchWeatherData(\"state.selectedCity\");\r\n    \r\n            // fetchWeatherData(API)'dan gelen veriyi kullanarak WeatherContext'teki state'i güncelliyoruz.\r\n            // Güncellemeyi SET_WEATHER_DATA action'ı ile yapıyoruz.\r\n            dispatch({ type: 'SET_WEATHER_DATA', payload: data });\r\n            \r\n          } catch (error) {\r\n            // Hata durumunu kontrol ediyoruz.\r\n            console.error('Hava durumu verileri alınırken hata oluştu:', error);\r\n          }\r\n        };\r\n    \r\n        fetchData();\r\n\r\n      }, [state.selectedCity, dispatch]);\r\n\r\n      \r\n  // Select bileşeni için seçenekler\r\n  const cityOptions = [\r\n    { value: 'Istanbul', label: 'Istanbul' },\r\n    { value: 'Adana', label: 'Adana' }\r\n    // <option value=\"1\">Adana</option>\r\n    // <option value=\"2\">Adıyaman</option>\r\n    // <option value=\"3\">Afyonkarahisar</option>\r\n    // <option value=\"4\">Ağrı</option>\r\n    // <option value=\"5\">Amasya</option>\r\n    // <option value=\"6\">Ankara</option>\r\n    // <option value=\"7\">Antalya</option>\r\n    // <option value=\"8\">Artvin</option>\r\n    // <option value=\"9\">Aydın</option>\r\n    // <option value=\"10\">Balıkesir</option>\r\n    // <option value=\"11\">Bilecik</option>\r\n    // <option value=\"12\">Bingöl</option>\r\n    // <option value=\"13\">Bitlis</option>\r\n    // <option value=\"14\">Bolu</option>\r\n    // <option value=\"15\">Burdur</option>\r\n    // <option value=\"16\">Bursa</option>\r\n    // <option value=\"17\">Çanakkale</option>\r\n    // <option value=\"18\">Çankırı</option>\r\n    // <option value=\"19\">Çorum</option>\r\n    // <option value=\"20\">Denizli</option>\r\n    // <option value=\"21\">Diyarbakır</option>\r\n    // <option value=\"22\">Edirne</option>\r\n    // <option value=\"23\">Elazığ</option>\r\n    // <option value=\"24\">Erzincan</option>\r\n    // <option value=\"25\">Erzurum</option>\r\n    // <option value=\"26\">Eskişehir</option>\r\n    // <option value=\"27\">Gaziantep</option>\r\n    // <option value=\"28\">Giresun</option>\r\n    // <option value=\"29\">Gümüşhane</option>\r\n    // <option value=\"30\">Hakkâri</option>\r\n    // <option value=\"31\">Hatay</option>\r\n    // <option value=\"32\">Isparta</option>\r\n    // <option value=\"33\">Mersin</option>\r\n    // <option value=\"34\">İstanbul</option>\r\n    // <option value=\"35\">İzmir</option>\r\n    // <option value=\"36\">Kars</option>\r\n    // <option value=\"37\">Kastamonu</option>\r\n    // <option value=\"38\">Kayseri</option>\r\n    // <option value=\"39\">Kırklareli</option>\r\n    // <option value=\"40\">Kırşehir</option>\r\n    // <option value=\"41\">Kocaeli</option>\r\n    // <option value=\"42\">Konya</option>\r\n    // <option value=\"43\">Kütahya</option>\r\n    // <option value=\"44\">Malatya</option>\r\n    // <option value=\"45\">Manisa</option>\r\n    // <option value=\"46\">Kahramanmaraş</option>\r\n    // <option value=\"47\">Mardin</option>\r\n    // <option value=\"48\">Muğla</option>\r\n    // <option value=\"49\">Muş</option>\r\n    // <option value=\"50\">Nevşehir</option>\r\n    // <option value=\"51\">Niğde</option>\r\n    // <option value=\"52\">Ordu</option>\r\n    // <option value=\"53\">Rize</option>\r\n    // <option value=\"54\">Sakarya</option>\r\n    // <option value=\"55\">Samsun</option>\r\n    // <option value=\"56\">Siirt</option>\r\n    // <option value=\"57\">Sinop</option>\r\n    // <option value=\"58\">Sivas</option>\r\n    // <option value=\"59\">Tekirdağ</option>\r\n    // <option value=\"60\">Tokat</option>\r\n    // <option value=\"61\">Trabzon</option>\r\n    // <option value=\"62\">Tunceli</option>\r\n    // <option value=\"63\">Şanlıurfa</option>\r\n    // <option value=\"64\">Uşak</option>\r\n    // <option value=\"65\">Van</option>\r\n    // <option value=\"66\">Yozgat</option>\r\n    // <option value=\"67\">Zonguldak</option>\r\n    // <option value=\"68\">Aksaray</option>\r\n    // <option value=\"69\">Bayburt</option>\r\n    // <option value=\"70\">Karaman</option>\r\n    // <option value=\"71\">Kırıkkale</option>\r\n    // <option value=\"72\">Batman</option>\r\n    // <option value=\"73\">Şırnak</option>\r\n    // <option value=\"74\">Bartın</option>\r\n    // <option value=\"75\">Ardahan</option>\r\n    // <option value=\"76\">Iğdır</option>\r\n    // <option value=\"77\">Yalova</option>\r\n    // <option value=\"78\">Karabük</option>\r\n    // <option value=\"79\">Kilis</option>\r\n    // <option value=\"80\">Osmaniye</option>\r\n    // <option value=\"81\">Düzce</option>,\r\n    // Diğer şehirleri buraya ekleyebilirsiniz\r\n  ];\r\n\r\n  // Select bileşeni için onChange olayı\r\n  const handleCityChange = (selectedOption) => {\r\n    // Seçilen şehri WeatherContext'e iletiyoruz.\r\n    dispatch({ type: 'SET_SELECTED_CITY', payload: selectedOption.value });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <label htmlFor=\"citySelect\">Şehir Seç:</label>\r\n      <Select\r\n        id=\"citySelect\"\r\n        value={{ value: state.selectedCity, label: state.selectedCity }}\r\n        options={cityOptions}\r\n        onChange={handleCityChange}\r\n      />\r\n\r\n      <div>\r\n        {/* Hava durumu verilerini burada göster */}\r\n        {/* Örneğin: */}\r\n        {state.weatherData && (\r\n          <div>\r\n            <h2>{state.weatherData.city.name} - {state.weatherData.city.country}</h2>\r\n            {/* Diğer hava durumu verilerini burada göster */}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WeatherApp;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}